<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SELECT METRIC' datatype='string' name='[Social Support Rank Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Corruption&quot;'>
        <calculation class='tableau' formula='&quot;Corruption&quot;' />
        <members>
          <member value='&quot;Happiness&quot;' />
          <member value='&quot;Generosity&quot;' />
          <member value='&quot;Freedom&quot;' />
          <member value='&quot;Wealth&quot;' />
          <member value='&quot;Health&quot;' />
          <member value='&quot;Social Support&quot;' />
          <member value='&quot;Corruption&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='all_data_SQL_Export+' inline='true' name='federated.1wzajsr02jnzoe10dyoio1kg41lb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_data_SQL_Export' name='textscan.1ezwskh1fjaqwb132ia5w1wns6lo'>
            <connection class='textscan' directory='/Users/mike/Desktop/IRONHACK/Bootcamp/Week_8/final_project_Ironhack_DA/Data/Clean' filename='all_data_SQL_Export.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.1ezwskh1fjaqwb132ia5w1wns6lo' name='all_data_SQL_Export.csv' table='[all_data_SQL_Export#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en' separator=','>
              <column datatype='integer' name='Country_ID' ordinal='0' />
              <column datatype='string' name='Country_Name' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Happiness_Score' ordinal='4' />
              <column datatype='real' name='Log_GDP_PEr_Capita' ordinal='5' />
              <column datatype='real' name='Social_Support' ordinal='6' />
              <column datatype='real' name='Life_Expectancy' ordinal='7' />
              <column datatype='real' name='Freedom' ordinal='8' />
              <column datatype='real' name='Generosity' ordinal='9' />
              <column datatype='real' name='Corruption' ordinal='10' />
              <column datatype='integer' name='%_Engaged' ordinal='11' />
              <column datatype='real' name='Average_hours_per_week' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.1ezwskh1fjaqwb132ia5w1wns6lo' name='country_rankings_SQL_Export.csv' table='[country_rankings_SQL_Export#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en' separator=','>
              <column datatype='integer' name='Country_ID' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='integer' name='Happiness_Score_Rank' ordinal='2' />
              <column datatype='integer' name='GDP_Per_Capita_Rank' ordinal='3' />
              <column datatype='integer' name='Social_Support_Rank' ordinal='4' />
              <column datatype='integer' name='Life_Expectancy_Rank' ordinal='5' />
              <column datatype='integer' name='Freedom_Rank' ordinal='6' />
              <column datatype='integer' name='Generosity_Rank' ordinal='7' />
              <column datatype='integer' name='Corruption_Rank' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[%_Engaged]' value='[all_data_SQL_Export.csv].[%_Engaged]' />
          <map key='[Average_hours_per_week]' value='[all_data_SQL_Export.csv].[Average_hours_per_week]' />
          <map key='[Corruption]' value='[all_data_SQL_Export.csv].[Corruption]' />
          <map key='[Corruption_Rank]' value='[country_rankings_SQL_Export.csv].[Corruption_Rank]' />
          <map key='[Country_ID (country_rankings_SQL_Export.csv)]' value='[country_rankings_SQL_Export.csv].[Country_ID]' />
          <map key='[Country_ID]' value='[all_data_SQL_Export.csv].[Country_ID]' />
          <map key='[Country_Name]' value='[all_data_SQL_Export.csv].[Country_Name]' />
          <map key='[Freedom]' value='[all_data_SQL_Export.csv].[Freedom]' />
          <map key='[Freedom_Rank]' value='[country_rankings_SQL_Export.csv].[Freedom_Rank]' />
          <map key='[GDP_Per_Capita_Rank]' value='[country_rankings_SQL_Export.csv].[GDP_Per_Capita_Rank]' />
          <map key='[Generosity]' value='[all_data_SQL_Export.csv].[Generosity]' />
          <map key='[Generosity_Rank]' value='[country_rankings_SQL_Export.csv].[Generosity_Rank]' />
          <map key='[Happiness_Score]' value='[all_data_SQL_Export.csv].[Happiness_Score]' />
          <map key='[Happiness_Score_Rank]' value='[country_rankings_SQL_Export.csv].[Happiness_Score_Rank]' />
          <map key='[Life_Expectancy]' value='[all_data_SQL_Export.csv].[Life_Expectancy]' />
          <map key='[Life_Expectancy_Rank]' value='[country_rankings_SQL_Export.csv].[Life_Expectancy_Rank]' />
          <map key='[Log_GDP_PEr_Capita]' value='[all_data_SQL_Export.csv].[Log_GDP_PEr_Capita]' />
          <map key='[Region]' value='[all_data_SQL_Export.csv].[Region]' />
          <map key='[Social_Support]' value='[all_data_SQL_Export.csv].[Social_Support]' />
          <map key='[Social_Support_Rank]' value='[country_rankings_SQL_Export.csv].[Social_Support_Rank]' />
          <map key='[Year (country_rankings_SQL_Export.csv)]' value='[country_rankings_SQL_Export.csv].[Year]' />
          <map key='[Year]' value='[all_data_SQL_Export.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_ID]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Country_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Name]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Country_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness_Score]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Happiness_Score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Log_GDP_PEr_Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Log_GDP_PEr_Capita]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Log_GDP_PEr_Capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_Support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_Support]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Social_Support</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life_Expectancy]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Life_Expectancy</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corruption]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Corruption</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%_Engaged</remote-name>
            <remote-type>20</remote-type>
            <local-name>[%_Engaged]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>%_Engaged</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_hours_per_week</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average_hours_per_week]</local-name>
            <parent-name>[all_data_SQL_Export.csv]</parent-name>
            <remote-alias>Average_hours_per_week</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_ID (country_rankings_SQL_Export.csv)]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Country_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (country_rankings_SQL_Export.csv)]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_Score_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness_Score_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Happiness_Score_Rank</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP_Per_Capita_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP_Per_Capita_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>GDP_Per_Capita_Rank</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_Support_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Social_Support_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Social_Support_Rank</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_Expectancy_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life_Expectancy_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Life_Expectancy_Rank</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Freedom_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Freedom_Rank</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Generosity_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Generosity_Rank</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Corruption_Rank]</local-name>
            <parent-name>[country_rankings_SQL_Export.csv]</parent-name>
            <remote-alias>Corruption_Rank</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Engaged' datatype='integer' name='[%_Engaged]' role='measure' type='quantitative' />
      <column caption='Average hours per week' datatype='real' name='[Average_hours_per_week]' role='dimension' type='quantitative' />
      <column caption='Selected Metric Value' datatype='real' name='[Calculation_6303843265534943232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Social Support Rank Parameter]&#10;    WHEN &quot;Happiness&quot; THEN [Happiness_Score]&#10;    WHEN &quot;Generosity&quot; THEN [Generosity]&#10;    WHEN &quot;Freedom&quot; THEN [Freedom]&#10;    WHEN &quot;Wealth&quot; THEN [Log_GDP_PEr_Capita]&#10;    WHEN &quot;Health&quot; THEN [Life_Expectancy]&#10;    WHEN &quot;Social Support&quot; THEN [Social_Support]&#10;    WHEN &quot;Corruption&quot; THEN -[Corruption]&#10;END' />
      </column>
      <column caption='Corruption Rank' datatype='integer' name='[Corruption_Rank]' role='measure' type='quantitative' />
      <column caption='Country ID (country rankings SQL Export.csv)' datatype='integer' name='[Country_ID (country_rankings_SQL_Export.csv)]' role='dimension' type='ordinal' />
      <column caption='Country ID' datatype='integer' name='[Country_ID]' role='dimension' type='ordinal' />
      <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Freedom Rank' datatype='integer' name='[Freedom_Rank]' role='measure' type='quantitative' />
      <column caption='GDP Per Capita Rank' datatype='integer' name='[GDP_Per_Capita_Rank]' role='measure' type='quantitative' />
      <column caption='Generosity Rank' datatype='integer' name='[Generosity_Rank]' role='measure' type='quantitative' />
      <column caption='Happiness Score' datatype='real' name='[Happiness_Score]' role='measure' type='quantitative' />
      <column caption='Happiness Score Rank' datatype='integer' name='[Happiness_Score_Rank]' role='measure' type='quantitative' />
      <column caption='Life Expectancy' datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
      <column caption='Life Expectancy Rank' datatype='integer' name='[Life_Expectancy_Rank]' role='measure' type='quantitative' />
      <column caption='Log GDP PEr Capita' datatype='real' name='[Log_GDP_PEr_Capita]' role='measure' type='quantitative' />
      <column caption='Social Support' datatype='real' name='[Social_Support]' role='measure' type='quantitative' />
      <column caption='Social Support Rank' datatype='integer' name='[Social_Support_Rank]' role='measure' type='quantitative' />
      <column caption='Year (country rankings SQL Export.csv)' datatype='integer' name='[Year (country_rankings_SQL_Export.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='all_data_SQL_Export.csv' datatype='table' name='[__tableau_internal_object_id__].[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]' role='measure' type='quantitative' />
      <column caption='country_rankings_SQL_Export.csv' datatype='table' name='[__tableau_internal_object_id__].[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/s4/7wsslyw16w9bqtllmwg3nfbm0000gp/T/tableau-temp/#TableauTemp_1t2rgof0suahak12p6vr31ng9eqr.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/11/2025 11:27:57 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908' table='[Extract].[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]' type='table' />
            <relation name='country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D' table='[Extract].[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]' type='table' />
          </relation>
          <cols>
            <map key='[%_Engaged]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[%_Engaged]' />
            <map key='[Average_hours_per_week]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Average_hours_per_week]' />
            <map key='[Corruption]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Corruption]' />
            <map key='[Corruption_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Corruption_Rank]' />
            <map key='[Country_ID (country_rankings_SQL_Export.csv)]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Country_ID]' />
            <map key='[Country_ID]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Country_ID]' />
            <map key='[Country_Name]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Country_Name]' />
            <map key='[Freedom]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Freedom]' />
            <map key='[Freedom_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Freedom_Rank]' />
            <map key='[GDP_Per_Capita_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[GDP_Per_Capita_Rank]' />
            <map key='[Generosity]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Generosity]' />
            <map key='[Generosity_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Generosity_Rank]' />
            <map key='[Happiness_Score]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Happiness_Score]' />
            <map key='[Happiness_Score_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Happiness_Score_Rank]' />
            <map key='[Life_Expectancy]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Life_Expectancy]' />
            <map key='[Life_Expectancy_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Life_Expectancy_Rank]' />
            <map key='[Log_GDP_PEr_Capita]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Log_GDP_PEr_Capita]' />
            <map key='[Region]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Region]' />
            <map key='[Social_Support]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Social_Support]' />
            <map key='[Social_Support_Rank]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Social_Support_Rank]' />
            <map key='[Year (country_rankings_SQL_Export.csv)]' value='[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D].[Year]' />
            <map key='[Year]' value='[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908].[Year]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Country_ID]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Country_ID</remote-alias>
              <ordinal>0</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Name]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Country_Name</remote-alias>
              <ordinal>1</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>2</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness_Score]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Happiness_Score</remote-alias>
              <ordinal>4</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1410</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Log_GDP_PEr_Capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Log_GDP_PEr_Capita]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Log_GDP_PEr_Capita</remote-alias>
              <ordinal>5</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1418</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social_Support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social_Support]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Social_Support</remote-alias>
              <ordinal>6</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>517</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life_Expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life_Expectancy]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Life_Expectancy</remote-alias>
              <ordinal>7</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>962</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>8</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>586</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>9</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>659</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Corruption]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Corruption</remote-alias>
              <ordinal>10</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>616</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>%_Engaged</remote-name>
              <remote-type>20</remote-type>
              <local-name>[%_Engaged]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>%_Engaged</remote-alias>
              <ordinal>11</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average_hours_per_week</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average_hours_per_week]</local-name>
              <parent-name>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</parent-name>
              <remote-alias>Average_hours_per_week</remote-alias>
              <ordinal>12</ordinal>
              <family>all_data_SQL_Export.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>319</approx-count>
              <contains-null>true</contains-null>
              <object-id>[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Country_ID (country_rankings_SQL_Export.csv)]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Country_ID</remote-alias>
              <ordinal>13</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (country_rankings_SQL_Export.csv)]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>14</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_Score_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness_Score_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Happiness_Score_Rank</remote-alias>
              <ordinal>15</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP_Per_Capita_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP_Per_Capita_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>GDP_Per_Capita_Rank</remote-alias>
              <ordinal>16</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social_Support_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Social_Support_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Social_Support_Rank</remote-alias>
              <ordinal>17</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life_Expectancy_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Life_Expectancy_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Life_Expectancy_Rank</remote-alias>
              <ordinal>18</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Freedom_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Freedom_Rank</remote-alias>
              <ordinal>19</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Generosity_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Generosity_Rank</remote-alias>
              <ordinal>20</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Corruption_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Corruption_Rank]</local-name>
              <parent-name>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</parent-name>
              <remote-alias>Corruption_Rank</remote-alias>
              <ordinal>21</ordinal>
              <family>country_rankings_SQL_Export.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country_ID (country_rankings_SQL_Export.csv)' />
        <field-sort-custom-order field='Year (country_rankings_SQL_Export.csv)' />
        <field-sort-custom-order field='Happiness_Score_Rank' />
        <field-sort-custom-order field='GDP_Per_Capita_Rank' />
        <field-sort-custom-order field='Social_Support_Rank' />
        <field-sort-custom-order field='Life_Expectancy_Rank' />
        <field-sort-custom-order field='Freedom_Rank' />
        <field-sort-custom-order field='Generosity_Rank' />
        <field-sort-custom-order field='Corruption_Rank' />
        <field-sort-custom-order field='Calculation_6303843265534943232' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SELECT METRIC' datatype='string' name='[Social Support Rank Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Corruption&quot;'>
          <calculation class='tableau' formula='&quot;Corruption&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='all_data_SQL_Export.csv' id='all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908'>
            <properties context=''>
              <relation connection='textscan.1ezwskh1fjaqwb132ia5w1wns6lo' name='all_data_SQL_Export.csv' table='[all_data_SQL_Export#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='integer' name='Country_ID' ordinal='0' />
                  <column datatype='string' name='Country_Name' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Happiness_Score' ordinal='4' />
                  <column datatype='real' name='Log_GDP_PEr_Capita' ordinal='5' />
                  <column datatype='real' name='Social_Support' ordinal='6' />
                  <column datatype='real' name='Life_Expectancy' ordinal='7' />
                  <column datatype='real' name='Freedom' ordinal='8' />
                  <column datatype='real' name='Generosity' ordinal='9' />
                  <column datatype='real' name='Corruption' ordinal='10' />
                  <column datatype='integer' name='%_Engaged' ordinal='11' />
                  <column datatype='real' name='Average_hours_per_week' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908' table='[Extract].[all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908]' type='table' />
            </properties>
          </object>
          <object caption='country_rankings_SQL_Export.csv' id='country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D'>
            <properties context=''>
              <relation connection='textscan.1ezwskh1fjaqwb132ia5w1wns6lo' name='country_rankings_SQL_Export.csv' table='[country_rankings_SQL_Export#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='integer' name='Country_ID' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Happiness_Score_Rank' ordinal='2' />
                  <column datatype='integer' name='GDP_Per_Capita_Rank' ordinal='3' />
                  <column datatype='integer' name='Social_Support_Rank' ordinal='4' />
                  <column datatype='integer' name='Life_Expectancy_Rank' ordinal='5' />
                  <column datatype='integer' name='Freedom_Rank' ordinal='6' />
                  <column datatype='integer' name='Generosity_Rank' ordinal='7' />
                  <column datatype='integer' name='Corruption_Rank' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D' table='[Extract].[country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country_ID]' />
              <expression op='[Country_ID (country_rankings_SQL_Export.csv)]' />
            </expression>
            <first-end-point object-id='all_data_SQL_Export.csv_7C954C73C3C84F54B8491902F87B8908' />
            <second-end-point object-id='country_rankings_SQL_Export.csv_D72EA6C5EF214CE3BE070A6E4836848D' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_data_SQL_Export+' name='federated.1wzajsr02jnzoe10dyoio1kg41lb' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SELECT METRIC' datatype='string' name='[Social Support Rank Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Corruption&quot;'>
              <calculation class='tableau' formula='&quot;Corruption&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1wzajsr02jnzoe10dyoio1kg41lb'>
            <column caption='Selected Metric Value' datatype='real' name='[Calculation_6303843265534943232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Social Support Rank Parameter]&#10;    WHEN &quot;Happiness&quot; THEN [Happiness_Score]&#10;    WHEN &quot;Generosity&quot; THEN [Generosity]&#10;    WHEN &quot;Freedom&quot; THEN [Freedom]&#10;    WHEN &quot;Wealth&quot; THEN [Log_GDP_PEr_Capita]&#10;    WHEN &quot;Health&quot; THEN [Life_Expectancy]&#10;    WHEN &quot;Social Support&quot; THEN [Social_Support]&#10;    WHEN &quot;Corruption&quot; THEN -[Corruption]&#10;END' />
            </column>
            <column datatype='real' name='[Corruption]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Happiness Score' datatype='real' name='[Happiness_Score]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
            <column caption='Log GDP PEr Capita' datatype='real' name='[Log_GDP_PEr_Capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Social Support' datatype='real' name='[Social_Support]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_6303843265534943232]' derivation='Sum' name='[sum:Calculation_6303843265534943232:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Country_Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Congo (Brazzaville)&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Congo (Kinshasa)&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Hong Kong S.A.R. of China&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Ivory Coast&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;State of Palestine&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Taiwan Province of China&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Turkiye&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country_Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central and Eastern Europe&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Commonwealth of Independent States&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;East Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Latin America and Caribbean&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Middle East and North Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North America and ANZ&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southeast Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Sub-Saharan Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Western Europe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2024' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Year:ok]</column>
            <column>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Country_Name:nk]</column>
            <column>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[Longitude (generated)]' field-type='quantitative' max='27302924.120612629' min='-13579535.11325632' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[Latitude (generated)]' field-type='quantitative' max='18444130.795051917' min='-14183964.758406194' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[sum:Calculation_6303843265534943232:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[sum:Calculation_6303843265534943232:qk]' />
              <lod column='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Country_Name:nk]' />
              <geometry column='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[Latitude (generated)]</rows>
        <cols>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E0C6E078-6CBF-461E-ADCB-34F3CDC6AB2B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Year:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Country_Name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1wzajsr02jnzoe10dyoio1kg41lb].[sum:Calculation_6303843265534943232:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Social Support Rank Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Country_Name:nk]</field>
            <field>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Region:nk]</field>
            <field>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[none:Year:qk]</field>
            <field>[federated.1wzajsr02jnzoe10dyoio1kg41lb].[sum:Calculation_6303843265534943232:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{103ED275-48B8-4379-AD42-981A3952A1EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      lzQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
